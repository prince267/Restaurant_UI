{"ast":null,"code":"import _classCallCheck from \"/home/prince/go/src/MAD_Assignment/restapplication/restaurant/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/prince/go/src/MAD_Assignment/restapplication/restaurant/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/prince/go/src/MAD_Assignment/restapplication/restaurant/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/prince/go/src/MAD_Assignment/restapplication/restaurant/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/prince/go/src/MAD_Assignment/restapplication/restaurant/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/prince/go/src/MAD_Assignment/restapplication/restaurant/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/prince/go/src/MAD_Assignment/restapplication/restaurant/src/components/pages/RestaurantUpationbyID.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./style.css\";\n\nfunction validate(id, name, address, addressline2, url, outcode, postcode, rating, typeoffood) {\n  var errors = [];\n\n  if (id.length === 0) {\n    errors.push(\"ID can't be empty\");\n  }\n\n  if (name.length === 0) {\n    errors.push(\"Name can't be empty\");\n  }\n\n  if (address.length === 0) {\n    errors.push(\"Address can't be empty\");\n  }\n\n  if (addressline2.length === 0) {\n    errors.push(\"Address Line 2 can't be empty\");\n  }\n\n  if (url.length === 0) {\n    errors.push(\"URL can't be empty\");\n  }\n\n  if (outcode.length === 0) {\n    errors.push(\"Outcode can't be empty\");\n  }\n\n  if (postcode.length === 0) {\n    errors.push(\"Postcode can't be empty\");\n  }\n\n  if (rating.length === 0) {\n    errors.push(\"Rating can't be empty\");\n  }\n\n  if (typeoffood.length === 0) {\n    errors.push(\"Type Of Food can't be empty\");\n  }\n\n  return errors;\n}\n\nvar restaurantUpdationbyID =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(restaurantUpdationbyID, _React$Component);\n\n  function restaurantUpdationbyID() {\n    var _this;\n\n    _classCallCheck(this, restaurantUpdationbyID);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(restaurantUpdationbyID).call(this));\n\n    _this.FindRestaurantByID = function () {\n      var id = _this.state.id; // const errors = validate(id);\n      // if (errors.length > 0) {\n      //   this.setState({ errors });\n      //   return;\n      // }\n\n      axios.get('http://localhost:8080/restaurant/' + _this.state.id).then(function (response) {\n        _this.setState({\n          restaurant: response.data.responseData\n        });\n      });\n    };\n\n    _this.state = {\n      id: \"\",\n      name: \"\",\n      address: \"\",\n      addressline2: \"\",\n      url: \"\",\n      outcode: \"\",\n      postcode: \"\",\n      rating: \"\",\n      typeoffood: \"\",\n      errors: []\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(restaurantUpdationbyID, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var _this$state = this.state,\n          name = _this$state.name,\n          address = _this$state.address,\n          addressline2 = _this$state.addressline2,\n          url = _this$state.url,\n          outcode = _this$state.outcode,\n          postcode = _this$state.postcode,\n          rating = _this$state.rating,\n          typeoffood = _this$state.typeoffood;\n      var errors = validate(name, address, addressline2, url, outcode, postcode, rating, typeoffood);\n\n      if (errors.length > 0) {\n        this.setState({\n          errors: errors\n        });\n        return;\n      }\n\n      axios.post('http://localhost:8080/restaurant/', {\n        name: this.state.name,\n        address: this.state.address,\n        addressline2: this.state.addressline2,\n        url: this.state.url,\n        outcode: this.state.outcode,\n        postcode: this.state.postcode,\n        rating: parseInt(this.state.rating, 10),\n        type_of_food: this.state.typeoffood\n      }, {\n        header: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        id: '',\n        name: '',\n        address: '',\n        addressline2: '',\n        url: '',\n        outcode: '',\n        postcode: '',\n        rating: '',\n        typeoffood: ''\n      });\n      alert(\"Restaurant Data Submited\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var errors = this.state.errors;\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, errors.map(function (error) {\n        return React.createElement(\"p\", {\n          key: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"Error: \", error);\n      }), React.createElement(\"input\", {\n        value: this.state.id,\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            id: evt.target.value\n          });\n        },\n        type: \"text\",\n        placeholder: \"Enter Restaurant ID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          console.log(\"click post\");\n\n          _this2.FindRestaurantByID();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Find Restaurant\"));\n    }\n  }]);\n\n  return restaurantUpdationbyID;\n}(React.Component);\n\nexport default restaurantUpdationbyID;","map":{"version":3,"sources":["/home/prince/go/src/MAD_Assignment/restapplication/restaurant/src/components/pages/RestaurantUpationbyID.js"],"names":["React","Component","axios","validate","id","name","address","addressline2","url","outcode","postcode","rating","typeoffood","errors","length","push","restaurantUpdationbyID","FindRestaurantByID","state","get","then","response","setState","restaurant","data","responseData","handleSubmit","bind","e","preventDefault","post","parseInt","type_of_food","header","console","log","catch","error","alert","map","evt","target","value"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\nimport axios from \"axios\";\n\nimport \"./style.css\";\n\nfunction validate(id,name, address, addressline2,url,outcode,postcode,rating,typeoffood ) {\n\n  const errors = [];\n\n  if (id.length === 0) {\n    errors.push(\"ID can't be empty\");\n  }\n  if (name.length === 0) {\n    errors.push(\"Name can't be empty\");\n  }\n  if (address.length === 0) {\n    errors.push(\"Address can't be empty\");\n  }\n  if (addressline2.length === 0) {\n    errors.push(\"Address Line 2 can't be empty\");\n  }\n  if (url.length === 0) {\n    errors.push(\"URL can't be empty\");\n  }\n  if (outcode.length === 0) {\n    errors.push(\"Outcode can't be empty\");\n  }\n  if (postcode.length === 0) {\n    errors.push(\"Postcode can't be empty\");\n  }\n  if (rating.length === 0) {\n    errors.push(\"Rating can't be empty\");\n  }\n  if (typeoffood.length === 0) {\n    errors.push(\"Type Of Food can't be empty\");\n  }\n\n  return errors;\n}\n\nclass restaurantUpdationbyID extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id :\"\",\n      name: \"\",\n      address: \"\",\n      addressline2: \"\",\n      url: \"\",\n      outcode: \"\",\n      postcode: \"\",\n      rating: \"\",\n      typeoffood: \"\",\n\n      errors: []\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  FindRestaurantByID=()=>{\n  \n    const {id } = this.state;\n\n    // const errors = validate(id);\n    // if (errors.length > 0) {\n    //   this.setState({ errors });\n    //   return;\n    // }\n    axios.get('http://localhost:8080/restaurant/'+this.state.id).then(response => {\n      this.setState({restaurant : response.data.responseData})\n    })\n    \n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { name, address, addressline2,url,outcode,postcode,rating,typeoffood } = this.state;\n\n    const errors = validate(name, address, addressline2,url,outcode,postcode,rating,typeoffood );\n    if (errors.length > 0) {\n      this.setState({ errors });\n      return;\n    }\n        axios.post('http://localhost:8080/restaurant/', \n        {\n          name: this.state.name, \n          address: this.state.address, \n          addressline2: this.state.addressline2,\n          url:this.state.url,\n          outcode:this.state.outcode,\n          postcode:this.state.postcode,\n          rating:parseInt(this.state.rating, 10),\n          type_of_food:this.state.typeoffood\n\n        }, \n        {header: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json',\n      }},\n        )\n        .then(function (response) {\n            console.log(response);\n        })\n        .catch(function (error) {\n            console.log(error);\n    });\n        this.setState({\n          id: '',\n          name: '',\n          address: '',\n          addressline2: '',\n          url: '',\n          outcode: '',\n          postcode: '',\n          rating: '',\n          typeoffood: ''\n        });\n        alert(\"Restaurant Data Submited\")\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n        <form>\n        {errors.map(error => (\n          <p key={error}>Error: {error}</p>\n        ))}\n        <input\n          value={this.state.id}\n          onChange={evt => this.setState({ id: evt.target.value })}\n          type=\"text\"\n          placeholder=\"Enter Restaurant ID\"\n        />\n        <button type=\"button\" \n                onClick={()=>{\n                console.log(\"click post\");\n                this.FindRestaurantByID()}}>Find Restaurant</button>\n                \n        {/* <input\n          value={this.state.name}\n          onChange={evt => this.setState({ name: evt.target.value })}\n          type=\"text\"\n          placeholder=\"Name\"\n        />\n        <input\n          value={this.state.address}\n          onChange={evt => this.setState({ address: evt.target.value })}\n          type=\"text\"\n          placeholder=\"Address\"\n        />\n        <input\n          value={this.state.addressline2}\n          onChange={evt => this.setState({ addressline2: evt.target.value })}\n          type=\"text\"\n          placeholder=\"Address Line 2\"\n        />\n        <input\n          value={this.state.url}\n          onChange={evt => this.setState({ url: evt.target.value })}\n          type=\"text\"\n          placeholder=\"URL\"\n        />\n        <input\n          value={this.state.outcode}\n          onChange={evt => this.setState({ outcode: evt.target.value })}\n          type=\"text\"\n          placeholder=\"Outcode\"\n        />\n        <input\n          value={this.state.postcode}\n          onChange={evt => this.setState({ postcode: evt.target.value })}\n          type=\"text\"\n          placeholder=\"Postcode\"\n        />\n        <input\n          value={this.state.rating}\n          onChange={evt => this.setState({ rating: evt.target.value })}\n          type=\"number\"\n          placeholder=\"Rating\"\n        />\n        <input\n          value={this.state.typeoffood}\n          defaultValue=\"hello\"\n          onChange={evt => this.setState({ typeoffood: evt.target.value })}\n          type=\"text\"\n          placeholder=\"Type Of Food\"\n        /> */}\n{/*         \n        <button type=\"button\" \n                onClick={()=>{\n                console.log(\"click post\");\n                this.handleSubmit()}}>Register</button> */}\n      </form>\n    );\n  }\n}\n\nexport default restaurantUpdationbyID;"]},"metadata":{},"sourceType":"module"}